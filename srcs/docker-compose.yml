# docker-compose.yml
services:
  base:
    build:
      args:
        - OS=${OS}
        - OS_VERSION=${OS_VERSION}
      context: ./requirements/base
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-base:${APP_VERSION}
    container_name: ${PROJECT_NAME}-base
    networks:
      - ${NETWORK}

  db:
    build:
      args:
        - BASE_IMAGE=${PROJECT_NAME}-base:${APP_VERSION}
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-mariadb:${APP_VERSION}
    container_name: ${PROJECT_NAME}-mariadb
    depends_on:
      - base
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - ${NETWORK}
    configs:
      - source: mariadb_config
        target: /etc/my.cnf
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysqladmin ping -h localhost -u ${MYSQL_ADMIN} --password=\"$(cat /run/secrets/db_admin_password)\" || exit 1"
      ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    secrets:
      - db_root_password
      - db_admin_password
      - wp_admin_password
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
      - MYSQL_ADMIN_PASSWORD_FILE=/run/secrets/db_admin_password
      - WP_ADMIN_PASSWORD_FILE=/run/secrets/wp_admin_password

  wordpress:
    build:
      args:
        - BASE_IMAGE=${PROJECT_NAME}-base:${APP_VERSION}
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-wordpress:${APP_VERSION}
    container_name: ${PROJECT_NAME}-wordpress
    restart: always
    depends_on:
      - base
      - db
    volumes:
      - wp-files:/var/www/html
    networks:
      - ${NETWORK}
    healthcheck:
      test: ["CMD", "php", "-f", "/var/www/html/wp-includes/version.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
    env_file:
      - .env
    secrets:
      - wp_admin_password
      - wp_user_password
      - db_admin_password
    environment:
      - WP_ADMIN_PASSWORD_FILE=/run/secrets/wp_admin_password
      - WP_USER_PASSWORD_FILE=/run/secrets/wp_user_password
      - MYSQL_ADMIN_PASSWORD_FILE=/run/secrets/db_admin_password

  nginx:
    build:
      args:
        - BASE_IMAGE=${PROJECT_NAME}-base:${APP_VERSION}
        - DOMAIN_NAME="${DOMAIN_NAME}"
        - USER_UID=${USER_UID}
        - USER_GID=${USER_GID}
      context: ./requirements/nginx
      dockerfile: Dockerfile
    image: ${PROJECT_NAME}-nginx:${APP_VERSION}
    container_name: ${PROJECT_NAME}-nginx
    restart: always
    ports:
      - "443:443"
    depends_on:
      - base
      - wordpress
      - db
    networks:
      - ${NETWORK}
    volumes:
      - wp-files:/var/www/html
    configs:
      - source: nginx_config_template
        target: /etc/nginx/nginx.conf.template
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - .env
